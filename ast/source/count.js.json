{
  "type": "File",
  "start": 0,
  "end": 760,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 24,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 760,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 24,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 33,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 33
          }
        },
        "specifiers": [
          {
            "type": "ImportDefaultSpecifier",
            "start": 7,
            "end": 13,
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 13
              }
            },
            "local": {
              "type": "Identifier",
              "start": 7,
              "end": 13,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 7
                },
                "end": {
                  "line": 1,
                  "column": 13
                },
                "identifierName": "_count"
              },
              "name": "_count"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 19,
          "end": 32,
          "loc": {
            "start": {
              "line": 1,
              "column": 19
            },
            "end": {
              "line": 1,
              "column": 32
            }
          },
          "extra": {
            "rawValue": "./_count.js",
            "raw": "'./_count.js'"
          },
          "value": "./_count.js"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Yields increasing or decreasing sequences of numbers. The starting value\n * and the step between separating output values can be chosen. Both parameters are\n * optional. The default for the starting value is <code>0</code>. The default\n * for the step between separating output values is <code>1</code>.\n *\n * @example\n * // equivalent to list( range( 7 ) )\n * list( head( count( ) , 7 ) ) ;\n *\n * @example\n * // returns [0,-1,-2,-3,-4]\n * list( head( count( 0 , -1 ) , 5 ) ) ;\n *\n * @param {number} [start=0] - The starting value.\n * @param {number} [step=1] - The step between the values.\n * @returns {IterableIterator<number>}\n ",
            "start": 35,
            "end": 675,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 20,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportDefaultDeclaration",
        "start": 676,
        "end": 759,
        "loc": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 23,
            "column": 1
          }
        },
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 691,
          "end": 759,
          "loc": {
            "start": {
              "line": 21,
              "column": 15
            },
            "end": {
              "line": 23,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 700,
            "end": 705,
            "loc": {
              "start": {
                "line": 21,
                "column": 24
              },
              "end": {
                "line": 21,
                "column": 29
              },
              "identifierName": "count"
            },
            "name": "count",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "AssignmentPattern",
              "start": 706,
              "end": 715,
              "loc": {
                "start": {
                  "line": 21,
                  "column": 30
                },
                "end": {
                  "line": 21,
                  "column": 39
                }
              },
              "left": {
                "type": "Identifier",
                "start": 706,
                "end": 711,
                "loc": {
                  "start": {
                    "line": 21,
                    "column": 30
                  },
                  "end": {
                    "line": 21,
                    "column": 35
                  },
                  "identifierName": "start"
                },
                "name": "start"
              },
              "right": {
                "type": "NumericLiteral",
                "start": 714,
                "end": 715,
                "loc": {
                  "start": {
                    "line": 21,
                    "column": 38
                  },
                  "end": {
                    "line": 21,
                    "column": 39
                  }
                },
                "extra": {
                  "rawValue": 0,
                  "raw": "0"
                },
                "value": 0
              }
            },
            {
              "type": "AssignmentPattern",
              "start": 717,
              "end": 725,
              "loc": {
                "start": {
                  "line": 21,
                  "column": 41
                },
                "end": {
                  "line": 21,
                  "column": 49
                }
              },
              "left": {
                "type": "Identifier",
                "start": 717,
                "end": 721,
                "loc": {
                  "start": {
                    "line": 21,
                    "column": 41
                  },
                  "end": {
                    "line": 21,
                    "column": 45
                  },
                  "identifierName": "step"
                },
                "name": "step"
              },
              "right": {
                "type": "NumericLiteral",
                "start": 724,
                "end": 725,
                "loc": {
                  "start": {
                    "line": 21,
                    "column": 48
                  },
                  "end": {
                    "line": 21,
                    "column": 49
                  }
                },
                "extra": {
                  "rawValue": 1,
                  "raw": "1"
                },
                "value": 1
              }
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 727,
            "end": 759,
            "loc": {
              "start": {
                "line": 21,
                "column": 51
              },
              "end": {
                "line": 23,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 730,
                "end": 757,
                "loc": {
                  "start": {
                    "line": 22,
                    "column": 1
                  },
                  "end": {
                    "line": 22,
                    "column": 28
                  }
                },
                "argument": {
                  "type": "CallExpression",
                  "start": 737,
                  "end": 756,
                  "loc": {
                    "start": {
                      "line": 22,
                      "column": 8
                    },
                    "end": {
                      "line": 22,
                      "column": 27
                    }
                  },
                  "callee": {
                    "type": "Identifier",
                    "start": 737,
                    "end": 743,
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 8
                      },
                      "end": {
                        "line": 22,
                        "column": 14
                      },
                      "identifierName": "_count"
                    },
                    "name": "_count"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 744,
                      "end": 749,
                      "loc": {
                        "start": {
                          "line": 22,
                          "column": 15
                        },
                        "end": {
                          "line": 22,
                          "column": 20
                        },
                        "identifierName": "start"
                      },
                      "name": "start"
                    },
                    {
                      "type": "Identifier",
                      "start": 751,
                      "end": 755,
                      "loc": {
                        "start": {
                          "line": 22,
                          "column": 22
                        },
                        "end": {
                          "line": 22,
                          "column": 26
                        },
                        "identifierName": "step"
                      },
                      "name": "step"
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Yields increasing or decreasing sequences of numbers. The starting value\n * and the step between separating output values can be chosen. Both parameters are\n * optional. The default for the starting value is <code>0</code>. The default\n * for the step between separating output values is <code>1</code>.\n *\n * @example\n * // equivalent to list( range( 7 ) )\n * list( head( count( ) , 7 ) ) ;\n *\n * @example\n * // returns [0,-1,-2,-3,-4]\n * list( head( count( 0 , -1 ) , 5 ) ) ;\n *\n * @param {number} [start=0] - The starting value.\n * @param {number} [step=1] - The step between the values.\n * @returns {IterableIterator<number>}\n ",
              "start": 35,
              "end": 675,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 0
                },
                "end": {
                  "line": 20,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Yields increasing or decreasing sequences of numbers. The starting value\n * and the step between separating output values can be chosen. Both parameters are\n * optional. The default for the starting value is <code>0</code>. The default\n * for the step between separating output values is <code>1</code>.\n *\n * @example\n * // equivalent to list( range( 7 ) )\n * list( head( count( ) , 7 ) ) ;\n *\n * @example\n * // returns [0,-1,-2,-3,-4]\n * list( head( count( 0 , -1 ) , 5 ) ) ;\n *\n * @param {number} [start=0] - The starting value.\n * @param {number} [step=1] - The step between the values.\n * @returns {IterableIterator<number>}\n ",
            "start": 35,
            "end": 675,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 20,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * Yields increasing or decreasing sequences of numbers. The starting value\n * and the step between separating output values can be chosen. Both parameters are\n * optional. The default for the starting value is <code>0</code>. The default\n * for the step between separating output values is <code>1</code>.\n *\n * @example\n * // equivalent to list( range( 7 ) )\n * list( head( count( ) , 7 ) ) ;\n *\n * @example\n * // returns [0,-1,-2,-3,-4]\n * list( head( count( 0 , -1 ) , 5 ) ) ;\n *\n * @param {number} [start=0] - The starting value.\n * @param {number} [step=1] - The step between the values.\n * @returns {IterableIterator<number>}\n ",
      "start": 35,
      "end": 675,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "_count",
      "start": 7,
      "end": 13,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 14,
      "end": 18,
      "loc": {
        "start": {
          "line": 1,
          "column": 14
        },
        "end": {
          "line": 1,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./_count.js",
      "start": 19,
      "end": 32,
      "loc": {
        "start": {
          "line": 1,
          "column": 19
        },
        "end": {
          "line": 1,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 32,
      "end": 33,
      "loc": {
        "start": {
          "line": 1,
          "column": 32
        },
        "end": {
          "line": 1,
          "column": 33
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Yields increasing or decreasing sequences of numbers. The starting value\n * and the step between separating output values can be chosen. Both parameters are\n * optional. The default for the starting value is <code>0</code>. The default\n * for the step between separating output values is <code>1</code>.\n *\n * @example\n * // equivalent to list( range( 7 ) )\n * list( head( count( ) , 7 ) ) ;\n *\n * @example\n * // returns [0,-1,-2,-3,-4]\n * list( head( count( 0 , -1 ) , 5 ) ) ;\n *\n * @param {number} [start=0] - The starting value.\n * @param {number} [step=1] - The step between the values.\n * @returns {IterableIterator<number>}\n ",
      "start": 35,
      "end": 675,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 676,
      "end": 682,
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "default",
        "keyword": "default",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "default",
      "start": 683,
      "end": 690,
      "loc": {
        "start": {
          "line": 21,
          "column": 7
        },
        "end": {
          "line": 21,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 691,
      "end": 699,
      "loc": {
        "start": {
          "line": 21,
          "column": 15
        },
        "end": {
          "line": 21,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "count",
      "start": 700,
      "end": 705,
      "loc": {
        "start": {
          "line": 21,
          "column": 24
        },
        "end": {
          "line": 21,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 705,
      "end": 706,
      "loc": {
        "start": {
          "line": 21,
          "column": 29
        },
        "end": {
          "line": 21,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "start",
      "start": 706,
      "end": 711,
      "loc": {
        "start": {
          "line": 21,
          "column": 30
        },
        "end": {
          "line": 21,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 712,
      "end": 713,
      "loc": {
        "start": {
          "line": 21,
          "column": 36
        },
        "end": {
          "line": 21,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 0,
      "start": 714,
      "end": 715,
      "loc": {
        "start": {
          "line": 21,
          "column": 38
        },
        "end": {
          "line": 21,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 715,
      "end": 716,
      "loc": {
        "start": {
          "line": 21,
          "column": 39
        },
        "end": {
          "line": 21,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "step",
      "start": 717,
      "end": 721,
      "loc": {
        "start": {
          "line": 21,
          "column": 41
        },
        "end": {
          "line": 21,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 722,
      "end": 723,
      "loc": {
        "start": {
          "line": 21,
          "column": 46
        },
        "end": {
          "line": 21,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 1,
      "start": 724,
      "end": 725,
      "loc": {
        "start": {
          "line": 21,
          "column": 48
        },
        "end": {
          "line": 21,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 725,
      "end": 726,
      "loc": {
        "start": {
          "line": 21,
          "column": 49
        },
        "end": {
          "line": 21,
          "column": 50
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 727,
      "end": 728,
      "loc": {
        "start": {
          "line": 21,
          "column": 51
        },
        "end": {
          "line": 21,
          "column": 52
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 730,
      "end": 736,
      "loc": {
        "start": {
          "line": 22,
          "column": 1
        },
        "end": {
          "line": 22,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "_count",
      "start": 737,
      "end": 743,
      "loc": {
        "start": {
          "line": 22,
          "column": 8
        },
        "end": {
          "line": 22,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 743,
      "end": 744,
      "loc": {
        "start": {
          "line": 22,
          "column": 14
        },
        "end": {
          "line": 22,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "start",
      "start": 744,
      "end": 749,
      "loc": {
        "start": {
          "line": 22,
          "column": 15
        },
        "end": {
          "line": 22,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 749,
      "end": 750,
      "loc": {
        "start": {
          "line": 22,
          "column": 20
        },
        "end": {
          "line": 22,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "step",
      "start": 751,
      "end": 755,
      "loc": {
        "start": {
          "line": 22,
          "column": 22
        },
        "end": {
          "line": 22,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 755,
      "end": 756,
      "loc": {
        "start": {
          "line": 22,
          "column": 26
        },
        "end": {
          "line": 22,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 756,
      "end": 757,
      "loc": {
        "start": {
          "line": 22,
          "column": 27
        },
        "end": {
          "line": 22,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 758,
      "end": 759,
      "loc": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 23,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 760,
      "end": 760,
      "loc": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 0
        }
      }
    }
  ]
}